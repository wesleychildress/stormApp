export interface IBootstrapOptions {
    url?: string;
    dojoConfig?: {
        [propName: string]: any;
    };
}
export declare const utils: {
    Promise: any;
};
export interface ILoadScriptOptions {
    url?: string;
    dojoConfig?: {
        [propName: string]: any;
    };
}
export declare function isLoaded(): HTMLScriptElement;
export declare function loadScript(options?: ILoadScriptOptions): Promise<HTMLScriptElement>;
export declare function loadModules(modules: string[], loadScriptOptions?: ILoadScriptOptions): Promise<any[]>;
export declare function bootstrap(callback?: (error: Error, dojoRequire?: any) => void, options?: IBootstrapOptions): void;
export declare function dojoRequire(modules: string[], callback: (...modules: any[]) => void): void;
declare var _default: {
    isLoaded: () => HTMLScriptElement;
    loadScript: (options?: ILoadScriptOptions) => Promise<HTMLScriptElement>;
    loadModules: (modules: string[], loadScriptOptions?: ILoadScriptOptions) => Promise<any[]>;
    utils: {
        Promise: any;
    };
    bootstrap: (callback?: (error: Error, dojoRequire?: any) => void, options?: IBootstrapOptions) => void;
    dojoRequire: (modules: string[], callback: (...modules: any[]) => void) => void;
};
export default _default;
