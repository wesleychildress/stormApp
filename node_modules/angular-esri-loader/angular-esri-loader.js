import { Injectable, NgModule } from '@angular/core';
import { bootstrap, dojoRequire, isLoaded } from 'esri-loader';

var EsriLoaderService = /** @class */ (function () {
    function EsriLoaderService() {
    }
    /**
     * @return {?}
     */
    EsriLoaderService.prototype.isLoaded = function () {
        return isLoaded();
    };
    /**
     * @param {?=} options
     * @return {?}
     */
    EsriLoaderService.prototype.load = function (options) {
        return new Promise(function (resolve, reject) {
            // don't try to load a second time
            if (isLoaded()) {
                resolve(dojoRequire);
            }
            // wrap bootstrap in a promise
            bootstrap(function (err) {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(dojoRequire);
                }
            }, options);
        });
    };
    /**
     * @param {?} moduleNames
     * @return {?}
     */
    EsriLoaderService.prototype.loadModules = function (moduleNames) {
        return new Promise(function (resolve) {
            dojoRequire(moduleNames, function () {
                var modules = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    modules[_i] = arguments[_i];
                }
                resolve(modules);
            });
        });
    };
    /**
     * @param {?} moduleNames
     * @param {?} callback
     * @return {?}
     */
    EsriLoaderService.prototype.require = function (moduleNames, callback) {
        return dojoRequire(moduleNames, callback);
    };
    EsriLoaderService.decorators = [
        { type: Injectable },
    ];
    /**
     * @nocollapse
     */
    EsriLoaderService.ctorParameters = function () { return []; };
    return EsriLoaderService;
}());

var EsriLoaderModule = /** @class */ (function () {
    function EsriLoaderModule() {
    }
    EsriLoaderModule.decorators = [
        { type: NgModule, args: [{
                    providers: [EsriLoaderService]
                },] },
    ];
    /**
     * @nocollapse
     */
    EsriLoaderModule.ctorParameters = function () { return []; };
    return EsriLoaderModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { EsriLoaderModule, EsriLoaderService };
