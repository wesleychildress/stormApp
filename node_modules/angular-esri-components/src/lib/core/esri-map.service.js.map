{"version":3,"file":"esri-map.service.js","sourceRoot":"","sources":["esri-map.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, ElementRef, EventEmitter } from '@angular/core';\r\nimport { EsriModuleProvider } from './index';\r\n\r\n@Injectable()\r\nexport class EsriMapService {\r\n  isLoaded = new EventEmitter();\r\n  map: __esri.Map;\r\n  mapView: __esri.MapView;\r\n\r\n  constructor(private moduleProvider: EsriModuleProvider) { }\r\n\r\n  loadMap(mapProperties: __esri.MapProperties, mapViewProperties: __esri.MapViewProperties, mapEl: ElementRef) {\r\n    return this.moduleProvider.require(['esri/Map', 'esri/views/MapView'])\r\n      .then(([Map, MapView]: [__esri.MapConstructor, __esri.MapViewConstructor]) => {\r\n        // create map\r\n        const map = new Map(mapProperties);\r\n\r\n        // prepare properties that should be set locally\r\n        // create a new object so as to not modify the provided object\r\n        const newMapViewProps = this.extend({}, mapViewProperties);\r\n        if (!newMapViewProps.container) { newMapViewProps.container = mapEl.nativeElement.id; }\r\n        if (!newMapViewProps.map) {\r\n          newMapViewProps.map = map;\r\n        }\r\n\r\n        // create the MapView\r\n        const mapView = new MapView(newMapViewProps);\r\n\r\n        this.map = map;\r\n        this.mapView = mapView;\r\n\r\n        this.isLoaded.emit();\r\n\r\n        return {\r\n          map: map,\r\n          mapView: mapView\r\n        };\r\n      });\r\n  }\r\n\r\n  loadWebMap(webMapProperties: __esri.WebMapProperties, mapViewProperties: __esri.MapViewProperties, mapEl: ElementRef) {\r\n    return this.moduleProvider.require(['esri/views/MapView', 'esri/WebMap'])\r\n    .then(([MapView, WebMap]: [__esri.MapViewConstructor, __esri.WebMapConstructor]) => {\r\n        // create map\r\n        const map = new WebMap(webMapProperties);\r\n\r\n        // prepare properties that should be set locally\r\n        // create a new object so as to not modify the provided object\r\n        const newMapViewProps = this.extend({}, mapViewProperties);\r\n        if (!newMapViewProps.container) { newMapViewProps.container = mapEl.nativeElement.id; }\r\n        if (!newMapViewProps.map) { newMapViewProps.map = map; }\r\n\r\n        // create the MapView\r\n        const mapView = new MapView(newMapViewProps);\r\n\r\n        this.map = map;\r\n        this.mapView = mapView;\r\n\r\n        this.isLoaded.emit();\r\n\r\n        return {\r\n          map: map,\r\n          mapView: mapView\r\n        };\r\n    });\r\n  }\r\n\r\n  addWidget(element: HTMLElement, position: string) {\r\n    this.mapView.ui.add(element, position);\r\n  }\r\n\r\n  extend(obj: any, src: any) {\r\n    Object.keys(src).forEach(function (key) { obj[key] = src[key]; });\r\n    return obj;\r\n  }\r\n}\r\n"]}