{"version":3,"file":"layers-toggle.component.js","sourceRoot":"","sources":["layers-toggle.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,MAAM,eAAe,CAAC;AAEzD,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;;IAgClD,+BAAoB,UAA0B;QAA1B,eAAU,GAAV,UAAU,CAAgB;KAAK;IAEnD,wCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC;YACjC,KAAI,CAAC,GAAG,GAAG,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC;YAC/B,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC;SACxC,CAAC,CAAC;KACJ;IAED,uCAAO,GAAP,UAAQ,MAAW,EAAE,KAAmB;QACtC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;KACvC;IAED,2CAAW,GAAX,UAAY,KAAmB;QAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KACrC;;gBA7CF,SAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,0fAUT;oBACD,MAAM,EAAE,CAAC,mKAQR,CAAC;iBACH;;;;gBAxBQ,cAAc;;;6BA8BpB,KAAK;;gCAhCR;;SA2Ba,qBAAqB","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { EsriMapService } from './../../core/index';\r\n\r\n@Component({\r\n  selector: 'esri-layersToggle',\r\n  template: `\r\n    <div esri-customWidget [position]=\"position\">\r\n      <!-- Only display if there is a map and it has layers -->\r\n      <div *ngIf=\"map?.layers.length > 0\" class=\"esri-layers-toggle\">\r\n        <div *ngFor=\"let layer of map.layers.toArray()\">\r\n          <input type=\"checkbox\" [attr.checked]=\"layer.visible\" (click)=\"onCheck($event, layer)\" /> {{layer.title}}\r\n          <a href=\"javascript:void(0)\" (click)=\"onZoomLayer(layer)\">Zoom</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .esri-layers-toggle {\r\n      z-index: 99;\r\n      background-color: white;\r\n      border-radius: 8px;\r\n      padding: 10px;\r\n      opacity: 0.75;\r\n    }\r\n  `]\r\n})\r\nexport class LayersToggleComponent implements OnInit {\r\n\r\n  map: __esri.Map;\r\n  mapView: __esri.MapView;\r\n\r\n  @Input() position: string;\r\n\r\n  constructor(private mapService: EsriMapService) { }\r\n\r\n  ngOnInit() {\r\n    this.mapService.isLoaded.subscribe(() => {\r\n      this.map = this.mapService.map;\r\n      this.mapView = this.mapService.mapView;\r\n    });\r\n  }\r\n\r\n  onCheck($event: any, layer: __esri.Layer) {\r\n    layer.visible = $event.target.checked;\r\n  }\r\n\r\n  onZoomLayer(layer: __esri.Layer) {\r\n    this.mapView.goTo(layer.fullExtent);\r\n  }\r\n}\r\n"]}